// -*- Mode: c++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*-
//
// Copyright (C) 2012 Opera Software ASA.  All rights reserved.
//
// This file is an original work developed by Opera Software ASA

#include "common/migration/speed_dial_importer.h"

#include <sstream>
#include <fstream>

#include "base/files/file_util.h"
#include "common/migration/migration_result_listener_mock.h"
#include "testing/gmock/include/gmock/gmock.h"
#include "testing/gtest/include/gtest/gtest.h"

using opera::common::migration::ut::MigrationResultListenerMock;

namespace opera {
namespace common {
namespace migration {

class SpeedDialListenerMock : public SpeedDialListener {
 public:
  using SpeedDialListener::SpeedDialEntry;
  using SpeedDialListener::BackgroundInfo;
  std::vector<SpeedDialEntry> entries_;
  BackgroundInfo background_;

  void OnSpeedDialParsed(const std::vector<SpeedDialEntry>& entries,
                         const BackgroundInfo& background) override {
    entries_ = entries;
    background_ = background;
  }

 private:
  ~SpeedDialListenerMock() override {}
};

TEST(SpeedDialImporterTest, EmptyInput) {
  std::unique_ptr<std::stringstream> input(new std::stringstream());
  scoped_refptr<SpeedDialListenerMock> listener(new SpeedDialListenerMock());
  scoped_refptr<SpeedDialImporter> importer(new SpeedDialImporter(listener));

  scoped_refptr<MigrationResultListenerMock> migration_result_listener =
      new MigrationResultListenerMock();
  EXPECT_CALL(*migration_result_listener,
              OnImportFinished(opera::SPEED_DIAL, true));
  importer->Import(std::move(input), migration_result_listener);

  EXPECT_EQ(0u, listener->entries_.size());
}


TEST(SpeedDialImporterTest, SampleInput) {
  std::unique_ptr<std::stringstream> input(new std::stringstream());
  *input << "\xEF\xBB\xBFOpera Preferences version 2.1\n";
  *input << "; Do not edit this file while Opera is running\n";
  *input << "; This file is stored in UTF-8 encoding\n";
  *input << "\n";
  *input << "[Deleted Items]\n";  // Deleted items is not extracted ATM
  *input << "opera-portal\n";
  *input << "opera-booking\n";
  *input << "opera-pricecomparison\n";
  *input << "opera-discount\n";
  *input << "opera-social\n";
  *input << "opera-operasocial\n";
  *input << "\n";
  *input << "[Background]\n";
  *input << "Filename=/some/path/browse-win.png\n";
  *input << "Layout=Tile\n";
  *input << "Enabled=1\n";
  *input << "\n";
  *input << "[Speed Dial 1]\n";
  *input << "Title=News Portal\n";
  *input << "Custom Title=0\n";
  *input << "Url=http://redir.opera.com/speeddials/portal/\n";
  *input << "Display Url=http://portal.opera.com/\n";
  *input << "Partner ID=opera-operaportal\n";
  *input << "Reload Policy=0\n";
  *input << "ID=79A82944E720864E7FD14BD51ECF10DA\n";
  *input << "Reload Interval=3600\n";
  *input << "Reload Only If Expired=0\n";
  *input << "\n";
  *input << "[Speed Dial 2]\n";
  *input << "Title=Custom Facebook Name\n";
  *input << "Custom Title=1\n";
  *input << "Url=http://redir.opera.com/speeddials/facebook/\n";
  *input << "Display Url=http://www.facebook.com/\n";
  *input << "Partner ID=opera-social\n";
  *input << "Reload Policy=1\n";
  *input << "ID=B7A42E8F20043D0539C1E79299F8E860\n";
  *input << "Reload Interval=900\n";
  *input << "Reload Only If Expired=1\n";

  scoped_refptr<SpeedDialListenerMock> listener(new SpeedDialListenerMock());
  scoped_refptr<SpeedDialImporter> importer(new SpeedDialImporter(listener));

  scoped_refptr<MigrationResultListenerMock> migration_result_listener =
      new MigrationResultListenerMock();
  EXPECT_CALL(*migration_result_listener,
              OnImportFinished(opera::SPEED_DIAL, true));
  importer->Import(std::move(input), migration_result_listener);

  EXPECT_TRUE(listener->background_.enabled_);
  EXPECT_EQ("/some/path/browse-win.png", listener->background_.file_path_);
  EXPECT_EQ("Tile", listener->background_.layout_);

  ASSERT_EQ(2u, listener->entries_.size());
  const SpeedDialListener::SpeedDialEntry& entry1 = listener->entries_[0];
  EXPECT_EQ(GURL("http://portal.opera.com/"), entry1.display_url_);
  EXPECT_FALSE(entry1.enable_reload_);
  EXPECT_EQ("opera-operaportal", entry1.partner_id_);
  EXPECT_EQ(3600, entry1.reload_interval_);
  EXPECT_FALSE(entry1.reload_only_if_expired_);
  EXPECT_EQ("News Portal", entry1.title_);
  EXPECT_FALSE(entry1.title_is_custom_);
  EXPECT_EQ(GURL("http://redir.opera.com/speeddials/portal/"), entry1.url_);


  const SpeedDialListener::SpeedDialEntry& entry2 = listener->entries_[1];
  EXPECT_EQ(GURL("http://www.facebook.com/"), entry2.display_url_);
  EXPECT_TRUE(entry2.enable_reload_);
  EXPECT_EQ("opera-social", entry2.partner_id_);
  EXPECT_EQ(900, entry2.reload_interval_);
  EXPECT_TRUE(entry2.reload_only_if_expired_);
  EXPECT_EQ("Custom Facebook Name", entry2.title_);
  EXPECT_TRUE(entry2.title_is_custom_);
  EXPECT_EQ(GURL("http://redir.opera.com/speeddials/facebook/"), entry2.url_);
}

}  // namespace migration
}  // namespace common
}  // namespace opera
